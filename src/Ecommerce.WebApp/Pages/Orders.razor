@page "/orders"
@attribute [Authorize]
@using Ecommerce.WebApp.Models
@using Microsoft.AspNetCore.Authorization
@inject IOrderService OrderService

<h3 class="mb-4">Histórico de Pedidos</h3>

@if (orders == null)
{
    <p><em>Carregando histórico de pedidos...</em></p>
}
else
{
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col" class="text-center">ID do Pedido</th>
                            <th scope="col" class="text-center">ID do Produto</th>
                            <th scope="col" class="text-center">Quantidade</th>
                            <th scope="col" class="text-end">Preço Total</th>
                            <th scope="col">Data do Pedido</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (orders.Any())
                        {
                            @foreach (var order in orders.OrderByDescending(o => o.OrderDate))
                            {
                                <tr>
                                    <td class="text-center">@order.Id</td>
                                    <td class="text-center">@order.ProductId</td>
                                    <td class="text-center">@order.Quantity</td>
                                    <td class="text-end">@order.TotalPrice.ToString("C")</td>
                                    <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm:ss")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center">Nenhum pedido realizado ainda.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@code {
    private List<Order> orders = new();

    protected override async Task OnInitializedAsync()
    {
        var orderList = await OrderService.GetOrders();
        if (orderList != null)
        {
            orders = orderList;
        }
    }
}